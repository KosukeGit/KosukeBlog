<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kosuke Blog</title>
    <link>https://kosukeblog.com/archives/index.xml</link>
    <description>Recent content on Kosuke Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://kosukeblog.com/archives/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GitHubの２段階認証後にpushできなくなった時の対処法</title>
      <link>https://kosukeblog.com/2017/05/authentication/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kosukeblog.com/2017/05/authentication/</guid>
      <description>&lt;p&gt;今回は、GitHubで２段階認証を行ったが、その後のpushができなくなってしまった際の対応方法について書いていきたいと思います。&lt;/p&gt;

&lt;p&gt;下記の様にプッシュ後にユーザ名とパスワードを求められて、入力すると&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fatal: Authentication failed for &#39;https://github.com/~~~&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;と出力されてしまいました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;この対応方法は、アクセストークンを生成する必要があります。
公式ページに従って手順通りに行えば解決できます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&#34;&gt;Creating a token&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まず、上記のURLの手順に従ってアクセストークンを発行します。
このアクセストークンはどこかにメモをしておきましょう。&lt;/p&gt;

&lt;p&gt;そして、ユーザ名とパスワードを入力する際のパスワードに先ほどのアクセストークンを入れて進めることでプッシュすることができます。&lt;/p&gt;

&lt;p&gt;ちなみに、キーチェーン等の確認をする際はこちらを参考にすると良いです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.github.com/articles/updating-credentials-from-the-osx-keychain/&#34;&gt;Updating your credentials via Keychain Access&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CocoaPodsについて</title>
      <link>https://kosukeblog.com/2017/04/cocoapods/</link>
      <pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kosukeblog.com/2017/04/cocoapods/</guid>
      <description>

&lt;h2 id=&#34;cocoapods-https-cocoapods-org&#34;&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;CocoaPods&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;オープンソースなどのライブラリを使用した際にバージョン管理を行うことができるiOSライブラリ管理ツール&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;インストール&#34;&gt;インストール&lt;/h5&gt;

&lt;p&gt;CocoaPods をインストールする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gem install cocoapods
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;podfileの生成&#34;&gt;Podfileの生成&lt;/h5&gt;

&lt;p&gt;Podfile が入ってない場合は、一番最初に使用したいディレクトリで以下のコマンドを入力するとPodfileが生成される
（この中にライブラリなどを追加していく）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pod init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;workspace等の生成&#34;&gt;Workspace等の生成&lt;/h5&gt;

&lt;p&gt;pod install を行うとその中に以下のファイル等が生成される&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アプリ名.xcworkspace&lt;/li&gt;
&lt;li&gt;Podfile.lock&lt;/li&gt;
&lt;li&gt;Podsフォルダ&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;podのバージョンを更新する&#34;&gt;podのバージョンを更新する&lt;/h5&gt;

&lt;p&gt;podのバージョンをあげる際に以下のコマンドを使用する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pod update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;編集&#34;&gt;編集&lt;/h5&gt;

&lt;p&gt;バージョンの書き換えなどを行う際に使用する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi Podfile
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert danger &#34;&gt;
  &lt;p&gt;最後に &lt;strong&gt;pod install&lt;/strong&gt; をしないと反映されないので注意&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;ファイル内の確認&#34;&gt;ファイル内の確認&lt;/h5&gt;

&lt;p&gt;podファイルの中を確認する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat Podfile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;古いバージョンの検出&#34;&gt;古いバージョンの検出&lt;/h5&gt;

&lt;p&gt;使用しているライブラリの中から古いバージョンを検出してくれる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pod outbated
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;コマンドのヘルプ&#34;&gt;コマンドのヘルプ&lt;/h5&gt;

&lt;p&gt;コマンドを忘れた際に使用する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pod --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;使用する際には アプリ名.xcworkspace を開いて、その中に使うライブラリのインポート行う必要があります。&lt;/p&gt;

&lt;p&gt;また、多数のライブラリ等がまとまった &lt;a href=&#34;https://github.com/matteocrippa/awesome-swift&#34;&gt;Awesome Swift&lt;/a&gt; はおすすめです。ここから使いたいものを探してみるといいかもしれません。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bash-completion, git-completionの導入手順</title>
      <link>https://kosukeblog.com/2017/04/completion/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kosukeblog.com/2017/04/completion/</guid>
      <description>

&lt;p&gt;今回は、bash-completion と git-completionの導入の手順を記していきます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;bash-completion&#34;&gt;bash-completion&lt;/h2&gt;

&lt;p&gt;bash-completionとは、Bashの補完機能を拡張するシェルスクリプトのことです。&lt;/p&gt;

&lt;h5 id=&#34;インストール&#34;&gt;インストール&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ brew install bash-completion
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;viコマンドで追加する&#34;&gt;viコマンドで追加する&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;vi ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;i（インサートモードに移行）&lt;/li&gt;
&lt;li&gt;以下を追加（&lt;a href=&#34;https://github.com/scop/bash-completion&#34;&gt;参考ページ&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;escキー（インサートモードを解除）&lt;/li&gt;
&lt;li&gt;:wq（保存して終了）&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;git-completion&#34;&gt;git-completion&lt;/h2&gt;

&lt;p&gt;git-completionとは、Gitコマンドの補完スクリプトのことです。&lt;/p&gt;

&lt;h5 id=&#34;インストール-1&#34;&gt;インストール&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/git/git/blob/master/contrib/completion/git-completion.bash&#34;&gt;ここ&lt;/a&gt;からダウンロード&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rawを開いて中身をコピー&lt;/li&gt;
&lt;li&gt;viコマンドで貼り付け&lt;/li&gt;
&lt;li&gt;:w 名前（今回は、名前のところを git-completion.bash とする）をつけて終了&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;実行する&#34;&gt;実行する&lt;/h5&gt;

&lt;p&gt;作成した git-completion.bash をどこかのフォルダにいれる&lt;/p&gt;

&lt;p&gt;（例：setting/git-completion.bash）&lt;/p&gt;

&lt;p&gt;その後は以下を入力して、指定したスクリプトファイルを実行する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source ~/setting/git-completion.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;これでターミナルでGitコマンドなどが入力途中で Tabキー を押すことによって最後まで自動で入力されて楽になります！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>このブログについて</title>
      <link>https://kosukeblog.com/2017/03/blog/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kosukeblog.com/2017/03/blog/</guid>
      <description>

&lt;p&gt;初めまして、&lt;a href=&#34;https://twitter.com/gt1028kn&#34;&gt;こうすけ&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;本日ブログを開設しました。
これまで技術的なことを主に&lt;a href=&#34;http://qiita.com/KosukeQiita&#34;&gt;Qiita&lt;/a&gt;に投稿してましたが、「〜の設定、手順」や「〜を作ってみた」などは作って終わりという感じでした。
なので、その過程など自分のブログにまとめてしまえば後から見直す時に楽だし、共有もできると思い、&lt;strong&gt;今更ですが&lt;/strong&gt;作りました。（それにこれから先もっと情報量が増えるだろうなと思ったので。）&lt;/p&gt;

&lt;p&gt;後は、単に独自ドメインを取得してブログを自分で作って公開するところまでやってみたいというのもあったからです。&lt;/p&gt;

&lt;p&gt;このブログは、技術的なことを中心とするつもりですが、それ以外のことも載せていく予定です。
マイペース更新ですがよろしくお願いします！&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;自己紹介&#34;&gt;自己紹介&lt;/h3&gt;

&lt;p&gt;こうすけです。名古屋の大学に通っている4年生（17年卒）です。
今年から東京の企業にエンジニアとして就職します。
まだまだ未熟ですがアプリ開発が好きです。アプリを0から作ってApp Storeで公開したりしていました&lt;a href=&#34;http://applion.jp/iphone/app/1089093474/&#34;&gt;。&lt;/a&gt;
趣味はギターで、よく息抜きにアコギを弾いて遊んでます&lt;a href=&#34;https://soundcloud.com/guitar_memo/acoustic-ver&#34;&gt;。&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;この先やってみたいこと&#34;&gt;この先やってみたいこと&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;エンターテイメントを通じて、人々の生活を豊かにするサービスやアプリケーションを形にして届けたい&lt;/li&gt;
&lt;li&gt;人をワクワクさせるものを仲間と作っていきたい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;これからよろしくお願いします。:)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>